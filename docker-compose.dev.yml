# User          - 01
# Matching      - 02
# Question      - 03
# Socket        - 04

version: "3"
services:
  matching:
    container_name: matching-service
    build:
      context: ./backend/matching-service
      dockerfile: Dockerfile.staging
    ports:
      - "5002:5000"
    environment:
      - SERVER_PORT=5000
      - DATABASE_URL=postgresql://admin:password@postgres_matching_service:5432/postgres
    depends_on:
      postgres_matching_service:
        condition: service_healthy
      broker:
        condition: service_healthy
    networks:
      - matching-service-network
      - api-network
      - kafka-network

  postgres_matching_service:
    image: postgres:latest
    container_name: postgres-matching-service
    volumes:
      - progresDB:/data/postgres/matching-service
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    networks:
      - matching-service-network
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U admin -d postgres'"]
      interval: 10s
      timeout: 3s
      retries: 3

  socket:
    container_name: socket-service
    build:
      context: ./backend/socket-service
      dockerfile: Dockerfile.staging
    ports:
      - "5004:5000"
    environment:
      - SERVER_PORT=5000
    depends_on:
      broker:
        condition: service_healthy
    networks:
      - socket-service-network
      - api-network
      - kafka-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-logs:/var/lib/zookeeper/log
    ports:
      - "2181:2181"
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 15s
      timeout: 15s
      start_period: 90s
      retries: 3

  broker:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 3000
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true

    volumes:
      - kafka-data:/var/lib/kafka/data
    ports:
      - "9092:9092"
    networks:
      - kafka-network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 15s
      timeout: 15s
      start_period: 90s
      retries: 3

networks:
  matching-service-network:
    driver: bridge

  socket-service-network:
    driver: bridge

  api-network:
    driver: bridge

  kafka-network:
    driver: bridge

volumes:
  progresDB:
  zookeeper-data:
  zookeeper-logs:
  kafka-data:
